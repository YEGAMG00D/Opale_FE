import React, { useMemo, useState } from 'react';
import styles from './RegionFilter.module.css';

// ÏßÄÏó≠/Íµ¨Íµ∞ ÎçîÎØ∏ Îç∞Ïù¥ÌÑ∞. Ïã§Ï†ú API Ïó∞Îèô Ïãú Ïù¥ Íµ¨Ï°∞Î•º Í∑∏ÎåÄÎ°ú ÏÇ¨Ïö©ÌïòÎ©¥ Îê©ÎãàÎã§.
const REGION_TO_DISTRICTS = {
  'ÏÑúÏö∏': [
    'Ï†ÑÏ≤¥', 'Í∞ïÎÇ®', 'Í∞ïÎ≥Ä', 'Í±¥ÎåÄÏûÖÍµ¨', 'Í≥†ÎçïÍ∞ïÏùº', 'Íµ¨Î°ú', 'ÎåÄÌïôÎ°ú', 'ÎèôÎåÄÎ¨∏', 'Îì±Ï¥å', 'Î™ÖÎèô', 'ÏÉÅÏïî', 'ÏÑúÏ¥à', 'ÏÜ°Ìåå', 'Ïã†Ï¥å', 'ÏòÅÎì±Ìè¨', 'Ïö©ÏÇ∞', 'Ï¢ÖÎ°ú'
  ],
  'Í≤ΩÍ∏∞': ['Ï†ÑÏ≤¥', 'ÏàòÏõê', 'ÏÑ±ÎÇ®', 'Í≥†Ïñë', 'Ïö©Ïù∏', 'ÏïàÏñë', 'Í≥ºÏ≤ú', 'Í¥ëÎ™Ö', 'Î∂ÄÏ≤ú', 'ÌèâÌÉù'],
  'Ïù∏Ï≤ú': ['Ï†ÑÏ≤¥', 'Î∂ÄÌèâ', 'ÏÜ°ÎèÑ', 'Ïó∞Ïàò', 'ÎÖºÌòÑ'],
  'Í∞ïÏõê': ['Ï†ÑÏ≤¥', 'Ï∂òÏ≤ú', 'ÏõêÏ£º', 'Í∞ïÎ¶â'],
  'ÎåÄÏ†Ñ/Ï∂©Ï≤≠': ['Ï†ÑÏ≤¥', 'ÎåÄÏ†Ñ', 'Ï≤úÏïà', 'Ï≤≠Ï£º'],
  'ÎåÄÍµ¨': ['Ï†ÑÏ≤¥', 'Ï§ëÍµ¨', 'ÏàòÏÑ±', 'ÎèôÏÑ±Î°ú'],
  'Î∂ÄÏÇ∞/Ïö∏ÏÇ∞': ['Ï†ÑÏ≤¥', 'Ìï¥Ïö¥ÎåÄ', 'ÏÑºÌÖÄ', 'ÎÇ®Ìè¨', 'ÏÇ¨ÏÉÅ', 'Ïö∏ÏÇ∞'],
  'Í≤ΩÏÉÅ': ['Ï†ÑÏ≤¥', 'Ï∞ΩÏõê', 'ÍπÄÌï¥', 'Ìè¨Ìï≠', 'Í≤ΩÏ£º'],
  'Í¥ëÏ£º/Ï†ÑÎùº/Ï†úÏ£º': ['Ï†ÑÏ≤¥', 'Í¥ëÏ£º', 'Ï†ÑÏ£º', 'Ïó¨Ïàò', 'Ï†úÏ£º']
};

const LEFT_REGIONS = Object.keys(REGION_TO_DISTRICTS);

export default function RegionFilter({ onChange }) {
  const [selectedRegion, setSelectedRegion] = useState(LEFT_REGIONS[0]);
  const [selectedDistrict, setSelectedDistrict] = useState('Ï†ÑÏ≤¥');

  const districts = useMemo(() => REGION_TO_DISTRICTS[selectedRegion] ?? ['Ï†ÑÏ≤¥'], [selectedRegion]);

  const handleRegionClick = (region) => {
    setSelectedRegion(region);
    setSelectedDistrict('Ï†ÑÏ≤¥');
    if (onChange) onChange({ region, district: 'Ï†ÑÏ≤¥' });
  };

  const handleDistrictClick = (district) => {
    setSelectedDistrict(district);
    if (onChange) onChange({ region: selectedRegion, district });
  };

  return (
    <div className={styles.wrapper}>
      <div className={styles.searchRow}>
        <input className={styles.searchInput} placeholder="Í∑πÏû•Î™ÖÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî" />
        <button className={styles.searchBtn} aria-label="search">üîç</button>
      </div>

      <div className={styles.filterBox}>
        <ul className={styles.leftTabs}>
          {LEFT_REGIONS.map((region) => (
            <li
              key={region}
              className={region === selectedRegion ? `${styles.leftTab} ${styles.active}` : styles.leftTab}
              onClick={() => handleRegionClick(region)}
            >
              {region}
              <span className={styles.count}>({REGION_TO_DISTRICTS[region].length - 1})</span>
            </li>
          ))}
        </ul>

        <div className={styles.rightPanel}>
          <div className={styles.rightHeader}>
            <span className={styles.allLabel}>Ï†ÑÏ≤¥</span>
            <span className={styles.allCount}>({districts.length - 1})</span>
          </div>

          <ul className={styles.districtList}>
            {districts.map((d) => (
              <li
                key={d}
                className={d === selectedDistrict ? `${styles.districtItem} ${styles.selected}` : styles.districtItem}
                onClick={() => handleDistrictClick(d)}
              >
                {d}
              </li>
            ))}
          </ul>
        </div>
      </div>
    </div>
  );
}


